{"version":3,"file":"static/js/922.b50d4148.chunk.js","mappings":"sKAoGA,QA7FA,WACE,MAAM,WAAEA,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAC9CC,GAAWC,EAAAA,EAAAA,OAEVC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CAAC,IAC/BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IAEjCK,EAAgBC,IACpBJ,GAAWK,IACF,IAAKA,EAAM,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,SAC5C,EAQJ,OACEC,EAAAA,EAAAA,KAAA,WAASC,UAAU,kBAAiBC,UAClCC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,aAAaG,SAPZT,IACnBA,EAAEU,kBACFC,EAAAA,EAAAA,IAAcrB,EAAU,wBAAyB,IAAKK,GAAUG,EAAW,EAKtBS,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,kBAC3BV,IAAWQ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAEV,KAGxCW,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,QAAOL,SAAC,mBACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAA,SACEQ,SAAUd,EACVO,UAAU,cACVQ,KAAK,QACLC,GAAG,QACHZ,KAAK,QACLa,YAAY,WACZC,UAAQ,EACRC,YAAY,EACZC,aAAa,cAMnBX,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,WAAUL,SAAC,cAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SACEQ,SAAUd,EACVO,UAAU,YACVQ,KAAMtB,EAAe,OAAS,WAC9BuB,GAAG,WACHZ,KAAK,WACLa,YAAY,cACZC,UAAQ,EACRC,YAAY,EACZC,aAAa,QAEd3B,GACCa,EAAAA,EAAAA,KAAA,KACEe,QAASA,IAAM3B,GAAiBQ,IAAUA,IAC1CK,UAAU,6BAGZD,EAAAA,EAAAA,KAAA,KACEe,QAASA,IAAM3B,GAAiBQ,IAAUA,IAC1CK,UAAU,yCAQlBD,EAAAA,EAAAA,KAAA,UACEgB,SAAUnC,EACVoB,UAAU,iCAAgCC,SAEzCrB,EAAa,iBAAmB,YAEnCmB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BAUd,C","sources":["Pages/LoginSignup/Login/Login-Form.js"],"sourcesContent":["import \"./Login-Form.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginRegister } from \"../../../redux/apiCalls\";\r\n\r\n\r\nfunction LoginForm() {\r\n  const { isFetching } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [inputs, setInputs] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    loginRegister(dispatch, \"/auth/login-pma/admin\", { ...inputs }, setMessage);\r\n  };\r\n\r\n  return (\r\n    <section className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        {/* login title */}\r\n        <h2 className=\"login-title\">welcome Back!</h2>\r\n        {message && <p className=\"login-error\">{message}</p>}\r\n\r\n        {/* email input section  */}\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <div className=\"login-input\">\r\n            <input\r\n              onChange={handleChange}\r\n              className=\"login-email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email...\"\r\n              required\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* password input section */}\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <div className=\"login-input\">\r\n            <input\r\n              onChange={handleChange}\r\n              className=\"login-pwd\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password...\"\r\n              required\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n            {showPassword ? (\r\n              <i\r\n                onClick={() => setShowPassword((prev) => !prev)}\r\n                className=\"fa-solid fa-eye viewPwd\"\r\n              ></i>\r\n            ) : (\r\n              <i\r\n                onClick={() => setShowPassword((prev) => !prev)}\r\n                className=\"fa-solid fa-eye-slash viewPwd\"\r\n              ></i>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* button section  */}\r\n\r\n        <button\r\n          disabled={isFetching}\r\n          className=\"btn-login dark--btn btn--Login\"\r\n        >\r\n          {isFetching ? \"Please wait...\" : \"Log in\"}\r\n        </button>\r\n        <span>Forgot your password?</span>\r\n        {/* <div className=\"signup\">\r\n          <span className=\"Signup-text\">Not a member yet?</span>\r\n          <Link to=\"/sign-up\" className=\"btn-login colored--btn btn--signup\">\r\n            Sign up\r\n          </Link>\r\n        </div> */}\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"names":["isFetching","useSelector","state","user","dispatch","useDispatch","showPassword","setShowPassword","useState","inputs","setInputs","message","setMessage","handleChange","e","prev","target","name","value","_jsx","className","children","_jsxs","onSubmit","preventDefault","loginRegister","htmlFor","onChange","type","id","placeholder","required","spellCheck","autoComplete","onClick","disabled"],"sourceRoot":""}