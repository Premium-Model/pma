{"version":3,"file":"static/js/655.b6d5c30f.chunk.js","mappings":"qHAsCA,MACA,EAAe,IAA0B,0D,wKC5BzC,MA0MA,EA1MmBA,KAAO,IAADC,EAAAC,EACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,UAE9CC,GADWC,EAAAA,EAAAA,MACKC,SAASC,MAAM,KAAK,IAEnCC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CAAC,IAC/BG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,IAC/BK,EAAYC,IAAiBN,EAAAA,EAAAA,WAAS,GAEvCO,GAAcC,EAAAA,EAAAA,cAAY,MAC9BC,EAAAA,EAAAA,IAAQrB,EAAS,SAADsB,OAAWhB,GAAQQ,EAAU,GAC5C,CAACd,EAAUM,KAEdiB,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAcL,IAClB,MAAO,IAAMK,CAAW,GACvB,IAGH,MAAMC,EAAgBC,IACpBV,GAAWW,IACF,IAAKA,EAAM,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,SAC5C,EAQJ,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qBAAoBF,UACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWF,SAAC,iBAE5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CACJC,MAAO,GACPC,OAAQ,GACRC,IAAW,OAAN1B,QAAM,IAANA,GAAAA,EAAQ2B,QAAgB,OAAN3B,QAAM,IAANA,OAAM,EAANA,EAAQ2B,QAAUC,EAAAA,EACzCC,IAAI,GACJP,UAAU,iBAEZJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UAC/BC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,mBAAkBF,SAAA,CACzB,OAANpB,QAAM,IAANA,OAAM,EAANA,EAAQ8B,UAAU,IAAQ,OAAN9B,QAAM,IAANA,OAAM,EAANA,EAAQ+B,kBAInCV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gBAAeF,SAAC,kBAChCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,UAC3BC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,oBAAmBF,SAAA,CAC1B,OAANpB,QAAM,IAANA,OAAM,EAANA,EAAQ8B,UAAU,IAAQ,OAAN9B,QAAM,IAANA,OAAM,EAANA,EAAQ+B,eAIjCb,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,UAC3BC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,oBAAmBF,SAAA,CAAC,gBACpBY,IAAa,OAANhC,QAAM,IAANA,OAAM,EAANA,EAAQiC,WAAWC,OAAO,oBAGnDhB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,UAE3BF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,oBAAmBF,SAAEpB,EAAOmC,aAE9CjB,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gBAAeF,SAAC,qBAChCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,UAC3BF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,oBAAmBF,SAAQ,OAANpB,QAAM,IAANA,OAAM,EAANA,EAAQoC,WAE/ClB,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gBAAeF,SAAC,kBAChCF,EAAAA,EAAAA,KAAA,OACEI,UAAU,eACVe,MAAO,CAAEC,cAAe,MAAOC,SAAU,OAAQC,IAAK,OAAQC,WAAW,SAAUC,eAAe,UAAWtB,SAEtG,OAANpB,QAAM,IAANA,GAAc,QAARf,EAANe,EAAQA,cAAM,IAAAf,GAAW,QAAXC,EAAdD,EAAgB0D,iBAAS,IAAAzD,OAAnB,EAANA,EAA2B0D,KAAI,CAACC,EAAMC,KACrC5B,EAAAA,EAAAA,KAAA,OAAKQ,IAAKmB,EAAkBR,MAAO,CAAEb,MAAO,UAAvBsB,cAK7BzB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,kBAAiBF,SAAC,UAClCC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,iBAAiByB,SA7DtBC,UACnBnC,EAAEoC,kBACFC,EAAAA,EAAAA,IAAS/D,EAAS,UAADsB,OAAYhB,EAAI,cAAc,IAAKS,GAAS,EA2DGkB,SAAA,EACtDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,gBACPF,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACLnC,KAAK,YACLoC,aAAcpD,EAAO8B,UACrBR,UAAU,kBACV+B,SAAUzC,QAGdS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,eACPF,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACLnC,KAAK,WACLoC,aAAcpD,EAAO+B,SACrBT,UAAU,kBACV+B,SAAUzC,QAGdS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,WACPF,EAAAA,EAAAA,KAAA,SACEiC,KAAK,QACLnC,KAAK,QACLoC,aAAcpD,EAAOoC,MACrBd,UAAU,kBACV+B,SAAUzC,QAGdS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPF,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACLnC,KAAK,cACLoC,aAAcpD,EAAOsD,SACrBhC,UAAU,kBACV+B,SAAUzC,QAGdS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPC,EAAAA,EAAAA,MAAA,UACEL,KAAK,aACLuC,GAAG,GACHjC,UAAU,kBACV+B,SAAUzC,EAAaQ,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,UAAQkC,aAAoB,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQwD,WAAWpC,SAChC,OAANpB,QAAM,IAANA,GAAAA,EAAQwD,WAAa,MAAQ,QAEhCtC,EAAAA,EAAAA,KAAA,UAAQD,OAAO,EAAKG,SAAC,SACrBF,EAAAA,EAAAA,KAAA,UAAQD,OAAO,EAAMG,SAAC,cAG1BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPC,EAAAA,EAAAA,MAAA,UACEL,KAAK,YACLuC,GAAG,GACHjC,UAAU,kBACV+B,SAAUzC,EAAaQ,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,UAAQkC,aAAoB,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQyD,UAAUrC,SAC/B,OAANpB,QAAM,IAANA,GAAAA,EAAQyD,UAAY,MAAQ,QAE/BvC,EAAAA,EAAAA,KAAA,UAAQD,OAAO,EAAKG,SAAC,SACrBF,EAAAA,EAAAA,KAAA,UAAQD,OAAO,EAAMG,SAAC,iBAI5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OACEI,UAAU,gBACVI,IAAK1B,EAAO2B,QAAU3B,EAAO2B,QAAUC,EAAAA,EACvCC,IAAI,MAENX,EAAAA,EAAAA,KAAA,SAAOwC,QAAQ,UAGfxC,EAAAA,EAAAA,KAAA,SAAOiC,KAAK,OAAOI,GAAG,OAAOlB,MAAO,CAAEsB,QAAS,cAGjDtC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAAA,SACEiC,KAAK,WACLnC,KAAK,WACLM,UAAU,kBACVsC,YAAY,WACZP,SAAUzC,QAIdM,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CACLC,QAAQ,SACRxC,UAAU,mBACV6B,KAAK,SACLY,SAAU1E,EAAW+B,SAEpB/B,EAAa,iBAAmB,2BAO5C,C","sources":["Images/img/avatar.svg","UI/edit/EditClient.jsx"],"sourcesContent":["var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAvatar(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 512,\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1765_7055)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0H512V512H0V0Z\",\n    fill: \"#222D3A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M330.085 110.955C311.299 90.672 285.059 79.5024 256.097 79.5024C226.981 79.5024 200.655 90.6044 181.955 110.762C163.053 131.141 153.843 158.838 156.005 188.746C160.292 247.751 205.192 295.75 256.097 295.75C307.003 295.75 351.826 247.76 356.18 188.765C358.371 159.128 349.103 131.489 330.085 110.955Z\",\n    fill: \"#B3BAC0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.9275 511.997H458.333C459 503 458.206 483.499 456.333 473.141C448.185 427.941 422.757 389.972 382.789 363.327C347.282 339.675 302.305 326.642 256.13 326.642C209.956 326.642 164.978 339.666 129.471 363.327C89.5038 389.982 64.0754 427.951 55.9275 473.15C54.0546 483.509 53.5001 504.5 53.9275 511.997Z\",\n    fill: \"#B3BAC0\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1765_7055\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 512,\n    height: 512,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAvatar);\nexport default __webpack_public_path__ + \"static/media/avatar.8281e2617447743e5756c9ffb0e8da2d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Image from \"mui-image\";\r\nimport Button from \"../../ATOMIC/atoms/button/Button\";\r\nimport \"../../UI/users/user.scss\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeEdit, makeGet } from \"../../redux/apiCalls\";\r\nimport \"./edit.scss\";\r\nimport avatar from \"../../Images/img/avatar.svg\";\r\nimport moment from \"moment\";\r\n\r\nconst Editclient = () => {\r\n  const dispatch = useDispatch();\r\n  const { isFetching } = useSelector((state) => state.process);\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[3];\r\n\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [client, setClient] = useState({});\r\n  const [inputs, setInputs] = useState({});\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const fetchClient = useCallback(() => {\r\n    makeGet(dispatch, `/user/${path}`, setClient);\r\n  }, [dispatch, path]);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe = fetchClient();\r\n    return () => unsubscribe;\r\n  }, []);\r\n\r\n  // update a user info\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    makeEdit(dispatch, `/admin/${path}/edit-user`, { ...inputs });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"user\">\r\n        <div className=\"userTitleContainer\">\r\n          <h1 className=\"userTitle\">Edit User</h1>\r\n        </div>\r\n        <div className=\"userContainer\">\r\n          <div className=\"userShow\">\r\n            <div className=\"userShowTop\">\r\n              <Image\r\n                width={90}\r\n                height={90}\r\n                src={client?.picture ? client?.picture : avatar}\r\n                alt=\"\"\r\n                className=\"userShowImg\"\r\n              />\r\n              <div className=\"userShowTopTitle\">\r\n                <span className=\"userShowUsername\">\r\n                  {client?.firstName} {client?.lastName}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"userShowBottom\">\r\n              <span className=\"userShowTitle\">User Details</span>\r\n              <div className=\"userShowInfo\">\r\n                <span className=\"userShowInfoTitle\">\r\n                  {client?.firstName} {client?.lastName}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"userShowInfo\">\r\n                <span className=\"userShowInfoTitle\">\r\n                  Date joined: {moment(client?.createdAt).format(\"DD-MM-YYYY\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"userShowInfo\">\r\n                {/* <Wc className=\"userShowIcon\" /> */}\r\n                <span className=\"userShowInfoTitle\">{client.country}</span>\r\n              </div>\r\n              <span className=\"userShowTitle\">Contact Details</span>\r\n              <div className=\"userShowInfo\">\r\n                <span className=\"userShowInfoTitle\">{client?.email}</span>\r\n              </div>\r\n              <span className=\"userShowTitle\">Brand Photos</span>\r\n              <div\r\n                className=\"userShowInfo\"\r\n                style={{ flexDirection: \"row\", flexWrap: \"wrap\", gap: \"10px\", alignItems:'center', justifyContent:'center' }}\r\n              >\r\n                {client?.client?.jobPhotos?.map((item, index) => (\r\n                  <img src={item} key={index} style={{ width: \"160px\" }} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"userUpdate\">\r\n            <span className=\"userUpdateTitle\">Edit</span>\r\n            <form className=\"userUpdateForm\" onSubmit={handleSubmit}>\r\n              <div className=\"userUpdateLeft\">\r\n                <div className=\"userUpdateItem\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    defaultValue={client.firstName}\r\n                    className=\"userUpdateInput\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"userUpdateItem\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    defaultValue={client.lastName}\r\n                    className=\"userUpdateInput\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"userUpdateItem\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    defaultValue={client.email}\r\n                    className=\"userUpdateInput\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"userUpdateItem\">\r\n                  <label>Phone Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    defaultValue={client.mobileNo}\r\n                    className=\"userUpdateInput\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"userUpdateItem\">\r\n                  <label>User verified</label>\r\n                  <select\r\n                    name=\"isVerified\"\r\n                    id=\"\"\r\n                    className=\"userUpdateInput\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option defaultValue={client?.isVerified}>\r\n                      {client?.isVerified ? \"Yes\" : \"No\"}\r\n                    </option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"userUpdateItem\">\r\n                  <label>User Updated</label>\r\n                  <select\r\n                    name=\"isUpdated\"\r\n                    id=\"\"\r\n                    className=\"userUpdateInput\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option defaultValue={client?.isUpdated}>\r\n                      {client?.isUpdated ? \"Yes\" : \"No\"}\r\n                    </option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"userUpdateRight\">\r\n                <div className=\"userUpdateUpload\">\r\n                  <img\r\n                    className=\"userUpdateImg\"\r\n                    src={client.picture ? client.picture : avatar}\r\n                    alt=\"\"\r\n                  />\r\n                  <label htmlFor=\"file\">\r\n                    {/* <Publish className=\"userUpdateIcon\" /> */}\r\n                  </label>\r\n                  <input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\r\n                </div>\r\n\r\n                <div className=\"userUpdateItem\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className=\"userUpdateInput\"\r\n                    placeholder=\"********\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <br />\r\n                <Button\r\n                  variant=\"normal\"\r\n                  className=\"userUpdateButton\"\r\n                  type=\"submit\"\r\n                  disabled={isFetching}\r\n                >\r\n                  {isFetching ? \"Please wait...\" : \"Update\"}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Editclient;\r\n"],"names":["Editclient","_client$client","_client$client$jobPho","dispatch","useDispatch","isFetching","useSelector","state","process","path","useLocation","pathname","split","isVisible","setIsVisible","useState","client","setClient","inputs","setInputs","processing","setProcessing","fetchClient","useCallback","makeGet","concat","useEffect","unsubscribe","handleChange","e","prev","target","name","value","_jsx","_Fragment","children","_jsxs","className","Image","width","height","src","picture","avatar","alt","firstName","lastName","moment","createdAt","format","country","email","style","flexDirection","flexWrap","gap","alignItems","justifyContent","jobPhotos","map","item","index","onSubmit","async","preventDefault","makeEdit","type","defaultValue","onChange","mobileNo","id","isVerified","isUpdated","htmlFor","display","placeholder","Button","variant","disabled"],"sourceRoot":""}