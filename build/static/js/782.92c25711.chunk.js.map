{"version":3,"file":"static/js/782.92c25711.chunk.js","mappings":"0JAGIA,EAAQ,UAoCZ,EAlCa,SAAHC,GAA2C,IAApCC,EAAQD,EAARC,SAAUC,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QACpC,OAAQA,GACN,IAAK,mBACHD,GAAYE,EAAAA,EAAAA,GAAKL,EAAO,oBACxB,MACF,IAAK,sBACHG,GAAYE,EAAAA,EAAAA,GAAKL,EAAO,uBACxB,MACF,IAAK,WACHG,GAAYE,EAAAA,EAAAA,GAAKL,EAAO,YACxB,MACF,IAAK,cACHG,GAAYE,EAAAA,EAAAA,GAAKL,EAAO,eACxB,MACF,IAAK,aACHG,GAAYE,EAAAA,EAAAA,GAAKL,EAAO,cACxB,MACF,IAAK,aACHG,EAAY,aAMhB,OACEG,EAAAA,EAAAA,KAAA,OACEF,QAASA,EACTD,WAAWE,EAAAA,EAAAA,GAAKL,EAAOG,GAAWD,SAEjCA,GAGP,C,4ECKA,EAvCkB,SAAHD,GAA0C,IAApCG,EAAOH,EAAPG,QAASF,EAAQD,EAARC,SAAUC,EAASF,EAATE,UACtC,OAAQC,GACN,IAAK,UACHD,EAAY,WACZ,MACF,IAAK,SACHA,EAAY,UACZ,MACF,IAAK,SACHA,EAAY,YACZ,MACF,IAAK,gBACHA,EAAY,gBACZ,MACF,IAAK,SACHA,EAAY,SACZ,MACF,IAAK,gBACHA,EAAY,cACZ,MACF,IAAK,aACHA,EAAY,aACZ,MACF,IAAK,oBACHA,EAAY,oBACZ,MACF,IAAK,cACHA,EAAY,cAKhB,OACEG,EAAAA,EAAAA,KAAA,QAAMH,UAAWA,EAAWC,QAASA,EAAQF,SAC1CA,GAGP,C,0GCtCA,GAAeK,EAAAA,EAAAA,IAA4BD,EAAAA,EAAAA,KAAK,OAAQ,CACtDE,EAAG,8DACD,0BCFJ,GAAeD,EAAAA,EAAAA,IAA4BD,EAAAA,EAAAA,KAAK,OAAQ,CACtDE,EAAG,6DACD,wBCgEJ,EA9DmB,SAAHP,GAMT,IALLQ,EAAWR,EAAXQ,YACAC,EAAUT,EAAVS,WACAC,EAAYV,EAAZU,aACAC,EAAeX,EAAfW,gBACAC,EAAeZ,EAAfY,gBAGMC,EAAQC,MAAMC,KAAK,CAAEC,OAAQP,IAAc,SAACQ,EAAGC,GAAC,OAAKA,EAAI,CAAC,IAiChE,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAClB,UAAU,aAAYD,SAAA,EAC/BI,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACLnB,UAAU,+CACVoB,QAASV,EACTW,SAAUf,GAAe,EAAEP,UAE7BI,EAAAA,EAAAA,KAACmB,EAAsB,OA7BrBf,GAAc,EACFI,EACLL,GAAe,EACVK,EAAMY,MAAM,EAAG,GACpBjB,EAAcC,EAAa,EACtBI,EAAMY,MAAMhB,EAAa,EAAGA,GAE5BI,EAAMY,MAAMjB,EAAc,EAAGA,EAAc,IAExCkB,KAAI,SAACC,GAAI,OAC1BtB,EAAAA,EAAAA,KAAA,UAEEH,UAAS,sBAAA0B,OACPD,IAASnB,EAAc,6BAA+B,IAExDc,QAAS,kBAxBS,SAACK,GACnBA,EAAO,GAAKA,EAAOlB,GAAckB,IAASnB,GAG9CE,EAAaiB,EACf,CAmBqBE,CAAgBF,EAAK,EAAC1B,SAEpC0B,GANIA,EAOE,KAcTtB,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACLnB,UAAU,+CACVoB,QAASX,EACTY,SAAUf,GAAeC,EAAWR,UAErCI,EAAAA,EAAAA,KAACyB,EAAoB,QAI5B,C,wNCEA,EA5Dc,SAAH9B,GAAqB,IAAf+B,EAAI/B,EAAJ+B,KAAMb,EAAClB,EAADkB,EACfc,GAAWC,EAAAA,EAAAA,MACjBC,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAY,IAAIC,KAAKV,EAAKS,WAC1BE,EAAU,IAAID,KAClBD,EAAUG,cAAgB,EAC1BH,EAAUI,WACVJ,EAAUK,WAGNC,GAAcC,EAAAA,EAAAA,cAAY,YAC9BC,EAAAA,EAAAA,IAAQhB,EAAS,cAADJ,OAAgBG,EAAKO,QAAUC,EACjD,GAAG,CAACP,IAOJ,OALAiB,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAcJ,IAClB,OAAO,kBAAMI,CAAY,CAC3B,GAAG,KAGD/B,EAAAA,EAAAA,MAAA,MAAAlB,SAAA,EACEI,EAAAA,EAAAA,KAAA,MAAAJ,SAAKiB,EAAI,KACTC,EAAAA,EAAAA,MAAA,MAAAlB,SAAA,CACS,OAANqC,QAAM,IAANA,OAAM,EAANA,EAAQa,UAAU,IAAQ,OAANb,QAAM,IAANA,OAAM,EAANA,EAAQc,aAE/B/C,EAAAA,EAAAA,KAAA,MAAAJ,SAAW,OAANqC,QAAM,IAANA,OAAM,EAANA,EAAQe,YACbhD,EAAAA,EAAAA,KAAA,MAAAJ,SAAK8B,EAAKuB,QACVjD,EAAAA,EAAAA,KAAA,MAAAJ,SAAK8B,EAAKwB,UAEVlD,EAAAA,EAAAA,KAAA,MAAAJ,SAAK8B,EAAKyB,OACVnD,EAAAA,EAAAA,KAAA,MAAAJ,SAAKwD,IAAO1B,EAAKS,WAAWkB,OAAO,iBACnCrD,EAAAA,EAAAA,KAAA,MAAAJ,SACGwD,IAAW,OAAJ1B,QAAI,IAAJA,GAAAA,EAAMW,QAAc,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMW,QAAUA,GAASgB,OAAO,kBAZnDxC,EAqCb,E,UCmDA,EAxG0B,WACxB,IAAMc,GAAWC,EAAAA,EAAAA,MAEjBC,GAAyCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CyB,EAAavB,EAAA,GAAEwB,EAAexB,EAAA,GACrCyB,GAAoC1B,EAAAA,EAAAA,WAAS,GAAM2B,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA5CE,EAAUD,EAAA,GACjBE,GADgCF,EAAA,IACA3B,EAAAA,EAAAA,WAAS,IAAM8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAxCE,EAAQD,EAAA,GACfE,GAD4BF,EAAA,IACF9B,EAAAA,EAAAA,UAAS,KAAGiC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,GAAsCpC,EAAAA,EAAAA,UAAS,GAAEqC,GAAAnC,EAAAA,EAAAA,GAAAkC,EAAA,GAA1C/D,EAAWgE,EAAA,GAAEC,EAAcD,EAAA,GAClCE,GAAgCvC,EAAAA,EAAAA,UAAS,IAAGwC,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAArCE,EAAQD,EAAA,GAETE,GAFsBF,EAAA,GAEG,OAAbhB,QAAa,IAAbA,OAAa,EAAbA,EAAe3C,QAC3BP,EAAaqE,KAAKC,KAAKF,EAAYD,GAEnCI,GAAcxE,EAAc,GAAKoE,EACjCK,EAAWD,EAAaJ,EAExBM,GAAWC,EAAAA,EAAAA,GAAIxB,GAAeyB,UAC9BC,EAAwB,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUzD,MAAMuD,EAAYC,IAsBlDhC,EAAAA,EAAAA,YAAU,WACR,IAAIC,OAJJF,EAAAA,EAAAA,IAAQhB,EAAS,8BAADJ,OAAgCyC,GAAST,GAKzD,OAAO,kBAAMV,CAAY,CAC3B,GAAG,CAACa,EAAYG,EAAUG,IAgB1B,OACElD,EAAAA,EAAAA,MAAA,OAAAlB,SAAA,EACEkB,EAAAA,EAAAA,MAACmE,EAAAA,EAAI,CAACnF,QAAQ,aAAYF,SAAA,CAAC,0BACD,KACxBI,EAAAA,EAAAA,KAAA,SACEkF,KAAK,OACLC,YAAY,qBACZzF,MAAO,CAAE0F,QAAS,QAClBC,SAtBY,SAACC,GACnBrB,EAASqB,EAAEC,OAAOC,MAAMC,cAC1B,QAuBI3E,EAAAA,EAAAA,MAAA,WAASjB,UAAU,kBAAiBD,SAAA,EAClCkB,EAAAA,EAAAA,MAAA,SAAOjB,UAAU,aAAYD,SAAA,EAC3BI,EAAAA,EAAAA,KAAA,SAAAJ,UACEkB,EAAAA,EAAAA,MAAA,MAAAlB,SAAA,EACEI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,UACJI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,UACJI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,WACJI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,cACJI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,SAEJI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,oBAEJI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,gBACJI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,mBAGRI,EAAAA,EAAAA,KAAA,SAAAJ,SACgB,OAAboF,QAAa,IAAbA,OAAa,EAAbA,EAAe3D,KAAI,SAACK,EAAMb,GACzB,OAAOb,EAAAA,EAAAA,KAAC0F,EAAK,CAAChE,KAAMA,EAAcb,EAAGA,GAANA,EACjC,UAGJb,EAAAA,EAAAA,KAAC2F,EAAAA,EAAU,CACTxF,YAAaA,EACbC,WAAYA,EACZC,aA/Da,SAACuF,GACpBxB,EAAewB,EACjB,EA8DQrF,gBAtEgB,WAClBJ,EAAc,GAChBiE,EAAejE,EAAc,EAEjC,EAmEQG,gBA7EgB,WAClBH,EAAcC,GAChBgE,EAAejE,EAAc,EAEjC,SA8EF,ECtGA,EATqB,WACnB,OACEH,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAwBD,UAErCI,EAAAA,EAAAA,KAAC6F,EAAiB,KAGxB,C","sources":["ATOMIC/atoms/card/Card.jsx","ATOMIC/atoms/container/Container.jsx","../node_modules/@mui/icons-material/esm/NavigateBeforeOutlined.js","../node_modules/@mui/icons-material/esm/NavigateNextOutlined.js","ATOMIC/molecules/datatable/Pagination.jsx","ATOMIC/organisms/subscription/Table.jsx","ATOMIC/organisms/subscription/SubscriptionTable.jsx","UI/subscriptions/Subscription.jsx"],"sourcesContent":["import clsx from \"clsx\";\nimport \"./cardStyle.scss\";\n\nlet style = \"default\";\n\nconst Card = ({  children, className, variant }) => {\n  switch (variant) {\n    case \"fill_light_green\":\n      className = clsx(style, \"card-light-green\");\n      break;\n    case \"fill_light_green-md\":\n      className = clsx(style, \"card-light-green_md\");\n      break;\n    case \"fill_red\":\n      className = clsx(style, \"card-red\");\n      break;\n    case \"fill_red-md\":\n      className = clsx(style, \"card-red_md\");\n      break;\n    case \"fill_black\":\n      className = clsx(style, \"card-black\");\n      break;\n    case \"full_width\":\n      className = \"full_width\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div\n      variant={variant}\n      className={clsx(style, className)}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./containerStyle.scss\";\n\nconst Container = ({ variant, children, className }) => {\n  switch (variant) {\n    case \"flexFit\":\n      className = \"flex-fit\";\n      break;\n    case \"flexed\":\n      className = \"flex-bw\";\n      break;\n    case \"normal\":\n      className = \"container\";\n      break;\n    case \"container_fit\":\n      className = \"container_fit\";\n      break;\n    case \"gapped\":\n      className = \"gapped\";\n      break;\n    case \"gapped-spaced\":\n      className = \"nav-flex-bw\";\n      break;\n    case \"gapped-top\":\n      className = \"gapped-top\";\n      break;\n    case \"gapped-top-center\":\n      className = \"gapped-top-center\";\n      break;\n    case \"flex-around\":\n      className = \"flex-around\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <main className={className} variant={variant}>\n      {children}\n    </main>\n  );\n};\n\nexport default Container;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.61 7.41 14.2 6l-6 6 6 6 1.41-1.41L11.03 12l4.58-4.59z\"\n}), 'NavigateBeforeOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10.02 6 8.61 7.41 13.19 12l-4.58 4.59L10.02 18l6-6-6-6z\"\n}), 'NavigateNextOutlined');","import React from \"react\";\nimport Button from \"../../atoms/button/Button\";\nimport Container from \"../../atoms/container/Container\";\nimport './pagination.scss'\nimport { NavigateBeforeOutlined, NavigateNextOutlined } from \"@mui/icons-material\";\n\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  handleNextClick,\n  handlePrevClick,\n}) => {\n\n  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);\n\n  const handlePageClick = (page) => {\n    if (page < 1 || page > totalPages || page === currentPage) {\n      return;\n    }\n    onPageChange(page);\n  };\n\n  const renderPageButtons = () => {\n    let pageButtons = [];\n    if (totalPages <= 5) {\n      pageButtons = pages;\n    } else if (currentPage <= 3) {\n      pageButtons = pages.slice(0, 5);\n    } else if (currentPage > totalPages - 3) {\n      pageButtons = pages.slice(totalPages - 5, totalPages);\n    } else {\n      pageButtons = pages.slice(currentPage - 3, currentPage + 2);\n    }\n    return pageButtons.map((page) => (\n      <button\n        key={page}\n        className={`Pagination__button ${\n          page === currentPage ? \"Pagination__button--active\" : \"\"\n        }`}\n        onClick={() => handlePageClick(page)}\n      >\n        {page}\n      </button>\n    ));\n  };\n\n  return (\n    <Container className=\"Pagination\">\n      <Button\n        className=\"Pagination__button Pagination__button--arrow\"\n        onClick={handlePrevClick}\n        disabled={currentPage <= 1}\n      >\n      <NavigateBeforeOutlined/>\n      </Button>\n      {renderPageButtons()}\n      <Button\n        className=\"Pagination__button Pagination__button--arrow\"\n        onClick={handleNextClick}\n        disabled={currentPage >= totalPages}\n      >\n       <NavigateNextOutlined/>\n      </Button>\n    </Container>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { makeGet } from \"../../../redux/apiCalls\";\nimport { useDispatch } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst Table = ({ item, i }) => {\n  const dispatch = useDispatch();\n  const [sender, setSender] = useState({});\n\n  const createdAt = new Date(item.createdAt);\n  const endDate = new Date(\n    createdAt.getFullYear() + 1,\n    createdAt.getMonth(),\n    createdAt.getDate()\n  );\n\n  const fetchSender = useCallback(() => {\n    makeGet(dispatch, `/user/user/${item.sender}`, setSender);\n  }, [dispatch]);\n\n  useEffect(() => {\n    let unsubscribe = fetchSender();\n    return () => unsubscribe;\n  }, []);\n\n  return (\n    <tr key={i}>\n      <td>{i + 1}</td>\n      <td>\n        {sender?.firstName} {sender?.lastName}\n      </td>\n      <td>{sender?.mobileNo}</td>\n      <td>{item.desc}</td>\n      <td>{item.amount}</td>\n      {/* <td>{item.senderEmail}</td> */}\n      <td>{item._id}</td>\n      <td>{moment(item.createdAt).format(\"DD-MM-YYYY\")}</td>\n      <td>\n        {moment(item?.endDate ? item?.endDate : endDate).format(\"DD-MM-YYYY\")}\n      </td>\n      {/* <td>\n        <Button variant=\"blur\">\n            {item.isApproved ? \"Verified\" : \"Pending\"}\n        </Button>\n        {!item.isApproved && (\n            <Button\n            variant=\"blur\"\n            onClick={() => handleApprovePayment(item._id)}\n            >\n            Approve payment\n            </Button>\n        )}\n        </td> */}\n      {/* <td>\n        <Button\n            variant=\"blur\"\n            onClick={() => handleDeletePayment(item._id)}\n        >\n            Delete\n        </Button>\n        </td> */}\n    </tr>\n  );\n};\n\nexport default Table;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport Button from \"../../atoms/button/Button\";\nimport Card from \"../../atoms/card/Card\";\nimport \"../../../ATOMIC/molecules/datatable/table.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { makeEdit, makeGet } from \"../../../redux/apiCalls\";\nimport moment from \"moment\";\nimport \"../../../ATOMIC/organisms/clients/tableSection.scss\";\nimport { userRequest } from \"../../../redux/requestMethod\";\nimport Table from \"./Table\";\nimport Pagination from \"../../molecules/datatable/Pagination\";\n\nconst SubscriptionTable = () => {\n  const dispatch = useDispatch();\n\n  const [subscriptions, setSubscriptons] = useState([]);\n  const [isApproved, setIsApproved] = useState(false);\n  const [isDelete, setIsDelete] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  // pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n\n  const totalRows = subscriptions?.length;\n  const totalPages = Math.ceil(totalRows / pageSize);\n\n  const startIndex = (currentPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n\n  const reversed = [...subscriptions].reverse();\n  const rowsToDisplay = reversed?.slice(startIndex, endIndex);\n\n  const handleNextClick = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const onPageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const fetchSubscriptions = () => {\n    makeGet(dispatch, `/payment/payments/?payment=${query}`, setSubscriptons);\n  };\n\n  useEffect(() => {\n    let unsubscribe = fetchSubscriptions();\n    return () => unsubscribe;\n  }, [isApproved, isDelete, query]);\n\n  const handleQuery = (e) => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleApprovePayment = (id) => {\n    makeEdit(dispatch, `/payment/approve/${id}`);\n    setIsApproved(!isApproved);\n  };\n\n  const handleDeletePayment = async (id) => {\n    await userRequest.delete(`/payment/delete/${id}`);\n    setIsDelete(!isDelete);\n  };\n\n  return (\n    <div>\n      <Card variant=\"full_width\">\n        Available Subscriptions{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"Search by email...\"\n          style={{ padding: \"10px\" }}\n          onChange={handleQuery}\n        />\n      </Card>\n      <section className=\"table_container\">\n        <table className=\"subs-table\">\n          <thead>\n            <tr>\n              <th># ID</th>\n              <th>USER</th>\n              <th>PHONE</th>\n              <th>CATEGORY</th>\n              <th>FEE</th>\n              {/* <th>EMAIL</th> */}\n              <th>TRANSACTION ID</th>\n              {/* <th>STATUS</th> */}\n              <th>START DATE</th>\n              <th>END DATE</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rowsToDisplay?.map((item, i) => {\n              return <Table item={item} key={i} i={i} />;\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={onPageChange}\n          handlePrevClick={handlePrevClick}\n          handleNextClick={handleNextClick}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default SubscriptionTable;\n","import React from \"react\";\nimport SubscriptionTable from \"../../ATOMIC/organisms/subscription/SubscriptionTable\";\nimport '../../ATOMIC/organisms/subscription/sub.scss'\n\nconst Subscription = () => {\n  return (\n    <div className=\"subscription-container\">\n      {/* <h2>SUBSCRIPTIONS</h2> */}\n      <SubscriptionTable />\n    </div>\n  );\n};\n\nexport default Subscription;\n"],"names":["style","_ref","children","className","variant","clsx","_jsx","createSvgIcon","d","currentPage","totalPages","onPageChange","handleNextClick","handlePrevClick","pages","Array","from","length","_","i","_jsxs","Container","Button","onClick","disabled","NavigateBeforeOutlined","slice","map","page","concat","handlePageClick","NavigateNextOutlined","item","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","sender","setSender","createdAt","Date","endDate","getFullYear","getMonth","getDate","fetchSender","useCallback","makeGet","useEffect","unsubscribe","firstName","lastName","mobileNo","desc","amount","_id","moment","format","subscriptions","setSubscriptons","_useState3","_useState4","isApproved","_useState5","_useState6","isDelete","_useState7","_useState8","query","setQuery","_useState9","_useState10","setCurrentPage","_useState11","_useState12","pageSize","totalRows","Math","ceil","startIndex","endIndex","reversed","_toConsumableArray","reverse","rowsToDisplay","Card","type","placeholder","padding","onChange","e","target","value","toLowerCase","Table","Pagination","pageNumber","SubscriptionTable"],"sourceRoot":""}