{"version":3,"file":"static/js/922.e985b009.chunk.js","mappings":"yNAoGA,MA7FA,WACE,IAAQA,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAhDH,WACFI,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAe,SAACC,GACpBN,GAAU,SAACO,GACT,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GAAGH,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,OAC9C,GACF,EAOA,OACEC,EAAAA,EAAAA,KAAA,WAASC,UAAU,kBAAiBC,UAClCC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,aAAaG,SAPb,SAACX,GACnBA,EAAEY,kBACFC,EAAAA,EAAAA,IAAc9B,EAAU,yBAAuBmB,EAAAA,EAAAA,GAAA,GAAOT,GAAUK,EAClE,EAIuDW,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,kBAC3BZ,IAAWU,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAEZ,KAGxCa,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,QAAOL,SAAC,mBACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAA,SACEQ,SAAUhB,EACVS,UAAU,cACVQ,KAAK,QACLC,GAAG,QACHZ,KAAK,QACLa,YAAY,WACZC,UAAQ,EACRC,YAAY,EACZC,aAAa,cAMnBX,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,WAAUL,SAAC,cAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SACEQ,SAAUhB,EACVS,UAAU,YACVQ,KAAM3B,EAAe,OAAS,WAC9B4B,GAAG,WACHZ,KAAK,WACLa,YAAY,cACZC,UAAQ,EACRC,YAAY,EACZC,aAAa,QAEdhC,GACCkB,EAAAA,EAAAA,KAAA,KACEe,QAAS,kBAAMhC,GAAgB,SAACW,GAAI,OAAMA,CAAI,GAAC,EAC/CO,UAAU,6BAGZD,EAAAA,EAAAA,KAAA,KACEe,QAAS,kBAAMhC,GAAgB,SAACW,GAAI,OAAMA,CAAI,GAAC,EAC/CO,UAAU,yCAQlBD,EAAAA,EAAAA,KAAA,UACEgB,SAAU5C,EACV6B,UAAU,iCAAgCC,SAEzC9B,EAAa,iBAAmB,YAEnC4B,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BAUd,C","sources":["Pages/LoginSignup/Login/Login-Form.js"],"sourcesContent":["import \"./Login-Form.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRegister } from \"../../../redux/apiCalls\";\n\n\nfunction LoginForm() {\n  const { isFetching } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputs((prev) => {\n      return { ...prev, [e.target.name]: e.target.value };\n    });\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    loginRegister(dispatch, \"/auth/login-pma/admin\", { ...inputs }, setMessage);\n  };\n\n  return (\n    <section className=\"login-container\">\n      <form className=\"login-form\" onSubmit={handleLogin}>\n        {/* login title */}\n        <h2 className=\"login-title\">welcome Back!</h2>\n        {message && <p className=\"login-error\">{message}</p>}\n\n        {/* email input section  */}\n        <div className=\"input-wrapper\">\n          <label htmlFor=\"email\">Email Address</label>\n          <div className=\"login-input\">\n            <input\n              onChange={handleChange}\n              className=\"login-email\"\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email...\"\n              required\n              spellCheck={false}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n\n        {/* password input section */}\n        <div className=\"input-wrapper\">\n          <label htmlFor=\"password\">Password</label>\n          <div className=\"login-input\">\n            <input\n              onChange={handleChange}\n              className=\"login-pwd\"\n              type={showPassword ? \"text\" : \"password\"}\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password...\"\n              required\n              spellCheck={false}\n              autoComplete=\"off\"\n            />\n            {showPassword ? (\n              <i\n                onClick={() => setShowPassword((prev) => !prev)}\n                className=\"fa-solid fa-eye viewPwd\"\n              ></i>\n            ) : (\n              <i\n                onClick={() => setShowPassword((prev) => !prev)}\n                className=\"fa-solid fa-eye-slash viewPwd\"\n              ></i>\n            )}\n          </div>\n        </div>\n\n        {/* button section  */}\n\n        <button\n          disabled={isFetching}\n          className=\"btn-login dark--btn btn--Login\"\n        >\n          {isFetching ? \"Please wait...\" : \"Log in\"}\n        </button>\n        <span>Forgot your password?</span>\n        {/* <div className=\"signup\">\n          <span className=\"Signup-text\">Not a member yet?</span>\n          <Link to=\"/sign-up\" className=\"btn-login colored--btn btn--signup\">\n            Sign up\n          </Link>\n        </div> */}\n      </form>\n    </section>\n  );\n}\n\nexport default LoginForm;\n"],"names":["isFetching","useSelector","state","user","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","message","setMessage","handleChange","e","prev","_objectSpread","_defineProperty","target","name","value","_jsx","className","children","_jsxs","onSubmit","preventDefault","loginRegister","htmlFor","onChange","type","id","placeholder","required","spellCheck","autoComplete","onClick","disabled"],"sourceRoot":""}